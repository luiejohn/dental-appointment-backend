openapi: 3.0.0
info:
  title: Dental Scheduler API
  version: 1.0.0
  description: APIs for user auth, dentists, and appointments
servers:
  - url: http://localhost:4000/api
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        name:
          type: string
        phone:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    UserProfile:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
    Dentist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        specialization:
          type: string
        profilePhotoUrl:
          type: string
    Appointment:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        dentistId:
          type: string
        startTs:
          type: string
          format: date-time
        endTs:
          type: string
          format: date-time
        status:
          type: string
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          description: Email already in use
  /auth/login:
    post:
      tags:
        - Auth
      summary: Authenticate user and return JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: JWT token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        "401":
          description: Invalid credentials
  /auth/me:
    get:
      tags:
        - Auth
      summary: Get current authenticated user profile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          description: Missing or invalid token
  /dentists:
    get:
      tags:
        - Dentists
      summary: List all dentists
      responses:
        "200":
          description: Array of dentists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dentist"
    post:
      tags:
        - Dentists
      summary: Create a new dentist
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - specialization
              properties:
                name:
                  type: string
                specialization:
                  type: string
                profilePhotoUrl:
                  type: string
      responses:
        "201":
          description: Dentist created
  /dentists/{id}:
    get:
      tags:
        - Dentists
      summary: Get dentist by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dentist record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dentist"
    put:
      tags:
        - Dentists
      summary: Update a dentist
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                specialization:
                  type: string
                profilePhotoUrl:
                  type: string
      responses:
        "200":
          description: Dentist updated
    delete:
      tags:
        - Dentists
      summary: Delete a dentist
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Dentist deleted
